# Generated by Django 4.2.19 on 2025-05-10 18:48

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Booking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("booking_number", models.CharField(max_length=20, unique=True)),
                ("check_in_date", models.DateField()),
                ("check_out_date", models.DateField()),
                ("number_of_guests", models.PositiveSmallIntegerField(default=1)),
                ("number_of_rooms", models.PositiveSmallIntegerField(default=1)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("cancelled", "Cancelled"),
                            ("completed", "Completed"),
                            ("no_show", "No Show"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("partial", "Partially Paid"),
                            ("paid", "Paid"),
                            ("refunded", "Refunded"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("base_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("total_nights", models.PositiveSmallIntegerField()),
                (
                    "total_room_price",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "taxes",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "additional_fees",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "discount_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("total_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("special_requests", models.TextField(blank=True, null=True)),
                (
                    "payment_method",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("booking_source", models.CharField(default="website", max_length=50)),
                (
                    "booking_channel",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("confirmation_sent", models.BooleanField(default=False)),
                ("reminder_sent", models.BooleanField(default=False)),
                ("cancellation_reason", models.TextField(blank=True, null=True)),
                ("cancellation_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="BookingPayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "payment_type",
                    models.CharField(
                        choices=[
                            ("deposit", "Deposit"),
                            ("full", "Full Payment"),
                            ("partial", "Partial Payment"),
                            ("refund", "Refund"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("credit_card", "Credit Card"),
                            ("debit_card", "Debit Card"),
                            ("paypal", "PayPal"),
                            ("bank_transfer", "Bank Transfer"),
                            ("cash", "Cash"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("refunded", "Refunded"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("payment_date", models.DateTimeField(auto_now_add=True)),
                ("notes", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Guest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("state", models.CharField(blank=True, max_length=100, null=True)),
                ("country", models.CharField(blank=True, max_length=100, null=True)),
                ("postal_code", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "nationality",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "passport_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("special_requests", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Hotel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=100)),
                ("address", models.CharField(max_length=255)),
                ("postal_code", models.CharField(blank=True, max_length=20, null=True)),
                ("country", models.CharField(max_length=100)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "location_coordinates",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("website", models.URLField(blank=True, null=True)),
                (
                    "base_price_per_night",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                ("currency", models.CharField(default="BDT", max_length=3)),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "review_score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                ("review_count", models.PositiveIntegerField(default=0)),
                (
                    "staff_rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "facilities_rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "cleanliness_rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "comfort_rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "value_for_money_rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "location_rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("prepayment_required", models.BooleanField(default=False)),
                ("is_recommended", models.BooleanField(default=False)),
                ("is_new_listing", models.BooleanField(default=False)),
                (
                    "distance_from_center",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=5, null=True
                    ),
                ),
                ("check_in_from", models.TimeField(blank=True, null=True)),
                ("check_in_until", models.TimeField(blank=True, null=True)),
                ("check_out_from", models.TimeField(blank=True, null=True)),
                ("check_out_until", models.TimeField(blank=True, null=True)),
                (
                    "star_rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        max_digits=2,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("has_parking", models.BooleanField(default=False)),
                ("has_airport_shuttle", models.BooleanField(default=False)),
                ("has_room_service", models.BooleanField(default=False)),
                ("has_non_smoking_rooms", models.BooleanField(default=False)),
                ("has_family_rooms", models.BooleanField(default=False)),
                ("has_air_conditioning", models.BooleanField(default=False)),
                ("has_dining_area", models.BooleanField(default=False)),
                ("has_fireplace", models.BooleanField(default=False)),
                ("has_balcony", models.BooleanField(default=False)),
                ("has_garden", models.BooleanField(default=False)),
                ("has_private_bathroom", models.BooleanField(default=False)),
                ("has_safety_deposit_box", models.BooleanField(default=False)),
                ("has_tv", models.BooleanField(default=False)),
                ("has_flat_screen_tv", models.BooleanField(default=False)),
                ("has_internet", models.BooleanField(default=False)),
                ("has_free_wifi", models.BooleanField(default=False)),
                ("has_mosquito_net", models.BooleanField(default=False)),
                ("has_fan", models.BooleanField(default=False)),
                ("has_ironing_facilities", models.BooleanField(default=False)),
                ("has_desk", models.BooleanField(default=False)),
                ("has_seating_area", models.BooleanField(default=False)),
                ("has_24h_front_desk", models.BooleanField(default=False)),
                ("has_wake_up_service", models.BooleanField(default=False)),
                ("has_swimming_pool", models.BooleanField(default=False)),
                ("has_fitness_center", models.BooleanField(default=False)),
                ("has_spa", models.BooleanField(default=False)),
                ("has_restaurant", models.BooleanField(default=False)),
                ("has_bar", models.BooleanField(default=False)),
                ("has_business_center", models.BooleanField(default=False)),
                ("has_conference_facilities", models.BooleanField(default=False)),
                ("has_elevator", models.BooleanField(default=False)),
                ("has_heating", models.BooleanField(default=False)),
                ("has_baggage_storage", models.BooleanField(default=False)),
                ("speaks_english", models.BooleanField(default=False)),
                ("speaks_hindi", models.BooleanField(default=False)),
                ("speaks_bengali", models.BooleanField(default=True)),
                ("is_ground_floor", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["-review_score", "name"],
            },
        ),
        migrations.CreateModel(
            name="RoomType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("max_occupancy", models.PositiveSmallIntegerField(default=2)),
                ("number_of_beds", models.PositiveSmallIntegerField(default=1)),
                ("bed_type", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "room_size",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                (
                    "price_per_night",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "discount_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("total_rooms", models.PositiveSmallIntegerField(default=1)),
                ("room_code", models.CharField(blank=True, max_length=10, null=True)),
                ("has_air_conditioning", models.BooleanField(default=False)),
                ("has_private_bathroom", models.BooleanField(default=False)),
                ("has_balcony", models.BooleanField(default=False)),
                ("has_tv", models.BooleanField(default=False)),
                ("has_refrigerator", models.BooleanField(default=False)),
                ("has_toiletries", models.BooleanField(default=False)),
                ("has_towels", models.BooleanField(default=False)),
                ("has_slippers", models.BooleanField(default=False)),
                ("has_clothes_rack", models.BooleanField(default=False)),
                ("has_safe", models.BooleanField(default=False)),
                ("has_desk", models.BooleanField(default=False)),
                ("has_minibar", models.BooleanField(default=False)),
                ("has_coffee_maker", models.BooleanField(default=False)),
                ("has_bathtub", models.BooleanField(default=False)),
                ("has_hairdryer", models.BooleanField(default=False)),
                ("has_iron", models.BooleanField(default=False)),
                ("has_seating_area", models.BooleanField(default=False)),
                ("has_view", models.BooleanField(default=False)),
                ("view_type", models.CharField(blank=True, max_length=50, null=True)),
                ("is_refundable", models.BooleanField(default=True)),
                ("cancellation_policy", models.TextField(blank=True, null=True)),
                ("smoking_allowed", models.BooleanField(default=False)),
                ("min_age_checkin", models.PositiveSmallIntegerField(default=18)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "hotel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="room_types",
                        to="hotel.hotel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RoomImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="room_images/")),
                ("alt_text", models.CharField(blank=True, max_length=255, null=True)),
                ("title", models.CharField(blank=True, max_length=100, null=True)),
                ("caption", models.TextField(blank=True, null=True)),
                ("is_primary", models.BooleanField(default=False)),
                (
                    "image_type",
                    models.CharField(
                        choices=[
                            ("room_view", "Room View"),
                            ("bathroom", "Bathroom"),
                            ("bed", "Bed"),
                            ("amenities", "Amenities"),
                            ("other", "Other"),
                        ],
                        default="room_view",
                        max_length=50,
                    ),
                ),
                ("display_order", models.PositiveSmallIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "room_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="room_images",
                        to="hotel.roomtype",
                    ),
                ),
            ],
            options={
                "ordering": ["display_order", "id"],
            },
        ),
        migrations.CreateModel(
            name="RoomAvailability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("available_rooms", models.PositiveSmallIntegerField(default=0)),
                (
                    "price_override",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("is_special_offer", models.BooleanField(default=False)),
                (
                    "special_offer_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("min_nights_stay", models.PositiveSmallIntegerField(default=1)),
                (
                    "room_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availability",
                        to="hotel.roomtype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HotelReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "staff",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                (
                    "cleanliness",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                (
                    "location",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                (
                    "hotel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="hotel.hotel",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HotelPolicy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pets_allowed", models.BooleanField(default=False)),
                (
                    "pets_fee",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("children_allowed", models.BooleanField(default=True)),
                ("children_policy", models.TextField(blank=True, null=True)),
                ("has_shuttle_service", models.BooleanField(default=False)),
                (
                    "shuttle_service_fee",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("has_breakfast", models.BooleanField(default=False)),
                (
                    "breakfast_fee",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("breakfast_included", models.BooleanField(default=False)),
                (
                    "extra_person_fee",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("general_policy", models.TextField(blank=True, null=True)),
                ("cancellation_policy", models.TextField(blank=True, null=True)),
                ("payment_options", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "hotel",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="policy",
                        to="hotel.hotel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HotelImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="hotel_images/")),
                ("alt_text", models.CharField(blank=True, max_length=255, null=True)),
                ("is_primary", models.BooleanField(default=False)),
                (
                    "image_type",
                    models.CharField(
                        choices=[
                            ("exterior", "Exterior"),
                            ("room", "Room"),
                            ("bathroom", "Bathroom"),
                            ("dining", "Dining"),
                            ("amenities", "Amenities"),
                            ("view", "View"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=50,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=100, null=True)),
                ("caption", models.TextField(blank=True, null=True)),
                ("display_order", models.PositiveSmallIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "hotel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="hotel.hotel",
                    ),
                ),
                (
                    "room_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="images",
                        to="hotel.roomtype",
                    ),
                ),
            ],
            options={
                "ordering": ["display_order", "id"],
            },
        ),
        migrations.AddIndex(
            model_name="hotel",
            index=models.Index(fields=["city"], name="hotel_hotel_city_3da5ba_idx"),
        ),
        migrations.AddIndex(
            model_name="hotel",
            index=models.Index(
                fields=["review_score"], name="hotel_hotel_review__190b52_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="hotel",
            index=models.Index(
                fields=["base_price_per_night"], name="hotel_hotel_base_pr_ec71d2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="hotel",
            index=models.Index(
                fields=["latitude", "longitude"], name="hotel_hotel_latitud_8b16ef_idx"
            ),
        ),
        migrations.AddField(
            model_name="guest",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="guest_profiles",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="bookingpayment",
            name="booking",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="payments",
                to="hotel.booking",
            ),
        ),
        migrations.AddField(
            model_name="bookingpayment",
            name="processed_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="processed_payments",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="guest",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="bookings",
                to="hotel.guest",
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="hotel",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="bookings",
                to="hotel.hotel",
            ),
        ),
        migrations.AddField(
            model_name="booking",
            name="room_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="bookings",
                to="hotel.roomtype",
            ),
        ),
        migrations.AddIndex(
            model_name="roomimage",
            index=models.Index(
                fields=["room_type"], name="hotel_roomi_room_ty_c5a6bb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="roomavailability",
            index=models.Index(fields=["date"], name="hotel_rooma_date_409663_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="roomavailability",
            unique_together={("room_type", "date")},
        ),
        migrations.AddIndex(
            model_name="hotelimage",
            index=models.Index(fields=["hotel"], name="hotel_hotel_hotel_i_aa1f75_idx"),
        ),
        migrations.AddIndex(
            model_name="hotelimage",
            index=models.Index(
                fields=["room_type"], name="hotel_hotel_room_ty_3a128f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bookingpayment",
            index=models.Index(
                fields=["booking"], name="hotel_booki_booking_b97daf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bookingpayment",
            index=models.Index(fields=["status"], name="hotel_booki_status_11545f_idx"),
        ),
        migrations.AddIndex(
            model_name="bookingpayment",
            index=models.Index(
                fields=["payment_date"], name="hotel_booki_payment_0c5a43_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["booking_number"], name="hotel_booki_booking_501b20_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["check_in_date"], name="hotel_booki_check_i_196aff_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["check_out_date"], name="hotel_booki_check_o_aee142_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(fields=["status"], name="hotel_booki_status_0f45ee_idx"),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(fields=["hotel"], name="hotel_booki_hotel_i_302c2b_idx"),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(fields=["guest"], name="hotel_booki_guest_i_e3b68e_idx"),
        ),
    ]
