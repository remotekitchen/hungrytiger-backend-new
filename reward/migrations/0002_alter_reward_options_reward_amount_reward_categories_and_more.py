# Generated by Django 4.1.6 on 2023-12-14 21:51

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('food', '0058_alter_category_menu_alter_menuitem_menu_and_more'),
        ('reward', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='reward',
            options={'verbose_name': 'Reward', 'verbose_name_plural': 'Rewards'},
        ),
        migrations.AddField(
            model_name='reward',
            name='amount',
            field=models.FloatField(default=0, verbose_name='Amount'),
        ),
        migrations.AddField(
            model_name='reward',
            name='categories',
            field=models.ManyToManyField(to='food.category', verbose_name='Categories'),
        ),
        migrations.AddField(
            model_name='reward',
            name='is_free_delivery',
            field=models.BooleanField(default=False, verbose_name='Is Free Delivery'),
        ),
        migrations.AddField(
            model_name='reward',
            name='items',
            field=models.ManyToManyField(to='food.menuitem', verbose_name='Menu items'),
        ),
        migrations.AddField(
            model_name='reward',
            name='limit_type',
            field=models.CharField(choices=[('one_dish', 'ONE_DISH'), ('limited', 'LIMITED'), ('full_meal', 'FULL_MEAL')], default='limited', max_length=25, verbose_name='Limit Type'),
        ),
        migrations.AddField(
            model_name='reward',
            name='max_dishes',
            field=models.PositiveIntegerField(default=0, verbose_name='Maximum dishes'),
        ),
        migrations.AddField(
            model_name='reward',
            name='min_dishes',
            field=models.PositiveIntegerField(default=0, verbose_name='Minimum dishes'),
        ),
        migrations.AddField(
            model_name='reward',
            name='offer_type',
            field=models.CharField(choices=[('free', 'FREE'), ('flat', 'FLAT'), ('percentage', 'PERCENTAGE')], default='percentage', max_length=25, verbose_name='Offer Type'),
        ),
        migrations.AddField(
            model_name='reward',
            name='restaurant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='food.restaurant', verbose_name='Restaurant'),
        ),
        migrations.AddField(
            model_name='reward',
            name='reward_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='reward.rewardgroup', verbose_name='Reward Group'),
        ),
        migrations.AddField(
            model_name='rewardgroup',
            name='applies_for',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('delivery', 'DELIVERY'), ('pickup', 'PICKUP'), ('dine_in', 'DINE_IN')], default='delivery', max_length=12, verbose_name='Applies for'), blank=True, default=list, size=None),
        ),
        migrations.AddField(
            model_name='rewardgroup',
            name='validity_date',
            field=models.DateField(blank=True, null=True, verbose_name='Validity Date'),
        ),
        migrations.AddField(
            model_name='rewardgroup',
            name='validity_days',
            field=models.PositiveIntegerField(default=0, verbose_name='Validity Days'),
        ),
        migrations.AddField(
            model_name='rewardgroup',
            name='validity_type',
            field=models.CharField(choices=[('unlimited', 'UNLIMITED'), ('days_after_rewarded', 'DAYS_AFTER_REWARDED'), ('special_date', 'SPECIFIC_DATE')], default='days_after_rewarded', max_length=25, verbose_name='Validity Type'),
        ),
        migrations.CreateModel(
            name='AdditionalCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_type', models.CharField(choices=[('minimum_amount', 'MINIMUM_AMOUNT'), ('time_of_day', 'TIME_OF_DAY'), ('specific_item_in_cart', 'SPECIFIC_ITEM_IN_CART')], default='minimum_amount', max_length=35, verbose_name='Condition Type')),
                ('amount', models.FloatField(default=0, verbose_name='Amount')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='Start time')),
                ('end_time', models.TimeField(blank=True, null=True, verbose_name='End time')),
                ('items', models.ManyToManyField(to='food.menuitem', verbose_name='Items')),
                ('reward_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reward.rewardgroup')),
            ],
            options={
                'verbose_name': 'Additional Condition',
                'verbose_name_plural': 'Additional Conditions',
            },
        ),
    ]
